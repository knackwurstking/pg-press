package templates

import (
	"fmt"

	"github.com/knackwurstking/pgpress/internal/env"
	"github.com/knackwurstking/pgpress/internal/web/shared/components"
	"github.com/knackwurstking/pgpress/pkg/models"
)

templ ListReports(user *models.User, troubleReports []*models.TroubleReportWithAttachments) {
	for _, tr := range troubleReports {
		<span class="trouble-report">
			<details
				id={ fmt.Sprintf("trouble-report-%d", tr.ID) }
				ontoggle={ updateURLHash(templ.JSExpression("event")) }
			>
				<summary>{ tr.Title }</summary>
				@components.MarkdownContent(tr.Content, tr.UseMarkdown)
				<!-- Attachments Preview Container -->
				if len(tr.LoadedAttachments) > 0 {
					<br/>
					<div
						class="attachments-preview-placeholder"
						data-trouble-report-id={ fmt.Sprintf("%d", tr.ID) }
						hx-get={ fmt.Sprintf(
							"%s/htmx/trouble-reports/attachments-preview?id=%d",
							env.ServerPathPrefix, tr.ID,
						) }
						hx-trigger="click"
						hx-swap="outerHTML"
						hx-on:htmx:response-error="alert(event.detail.xhr.responseText)"
					>
						<div class="attachments-preview-label">
							<i class="bi bi-paperclip"></i>
							Anhänge ({ len(tr.LoadedAttachments) }) - Klicken Sie hier, um zu laden...
						</div>
					</div>
				}
			</details>
			<div class="actions flex gap justify-end items-center">
				// GoTo: Modifications
				<a
					role="button"
					class="ghost secondary icon"
					href={ fmt.Sprintf(
						"%s/trouble-reports/modifications/%d",
						env.ServerPathPrefix, tr.ID,
					) }
				>
					<i class="bi bi-clock-history"></i>
				</a>
				// Edit Report
				<a
					href={ templ.URL(fmt.Sprintf(
						"%s/editor?type=troublereport&id=%d&return_url=%s/trouble-reports",
						env.ServerPathPrefix, tr.ID, env.ServerPathPrefix,
					)) }
					class="ghost icon"
					role="button"
				>
					<i class="bi bi-pen"></i>
				</a>
				// Share Report (PDF)
				<button
					role="button"
					class="info ghost icon"
					title="Als PDF teilen"
					onclick={ components.DownloadTroubleReportPDF(
						fmt.Sprintf("%s/trouble-reports/share-pdf?id=%d",
							env.ServerPathPrefix, tr.ID)) }
				>
					<i class="bi bi-share"></i>
				</button>
				// Admin only: Delete Report
				<button
					hx-delete={ fmt.Sprintf(
						"%s/htmx/trouble-reports/data?id=%d",
						env.ServerPathPrefix, tr.ID,
					) }
					hx-trigger="click"
					hx-target="#data"
					hx-confirm="Sind Sie sicher, dass Sie diesen Fehlerbericht löschen möchten?"
					hx-on:htmx:response-error="alert(event.detail.xhr.responseText)"
					class="ghost destructive icon"
					if !user.IsAdmin() {
						disabled
					}
				>
					<i class="bi bi-trash"></i>
				</button>
			</div>
			<hr/>
		</span>
	}
	@components.MarkdownScript()
	@components.MarkdownStyles()
	@listReportsScript()
}

script updateURLHash(event templ.JSExpression) {
	var details = event.target;
	if (details.open) {
		// Update URL hash when details is opened
		history.replaceState(null, '', '#' + details.id);
	} else {
		// Clear hash when details is closed
		history.replaceState(null, '', window.location.pathname + window.location.search);
	}
}

script listReportsScript() {
	if (location.hash === "") {
		return;
	}

	var details = document.querySelector(location.hash);
	console.debug(location.hash, details)
	if (details) {
		details.open = true;
		setTimeout(() =>
			details.scrollIntoView({ behavior: 'smooth', block: 'start' }),
		100);
	}
}
