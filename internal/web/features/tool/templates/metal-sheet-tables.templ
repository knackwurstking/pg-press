package templates

import (
	"fmt"

	"github.com/knackwurstking/pgpress/internal/web/shared/components"
	"github.com/knackwurstking/pgpress/internal/web/shared/helpers"
	"github.com/knackwurstking/pgpress/pkg/models"
)

templ MetalSheetTableTop(user *models.User, metalSheets []*models.MetalSheet) {
	<figure class="w-full overflow-x-scroll">
		<table class="table borderless compact">
			<thead>
				<tr>
					<th>St채rke (mm)</th>
					<th>Blech (mm)</th>
					<th>Typ</th>
					<th></th>
				</tr>
			</thead>
			<tbody>
				if len(metalSheets) == 0 {
					<tr>
						<td colspan="4" class="text-center">
							<i><small>Keine Bleche f체r dieses Werkzeug gefunden</small></i>
						</td>
					</tr>
				} else {
					for _, sheet := range metalSheets {
						<tr>
							<td>{ fmt.Sprintf("%.1f", sheet.TileHeight) }</td>
							<td>{ fmt.Sprintf("%.1f", sheet.Value) }</td>
							<td>
								<span class="badge small">{ sheet.Identifier.String() }</span>
							</td>
							<td class="button-group flex justify-end items-center">
								@components.TableActions(components.TableActionsOptions{
									EditHref:        helpers.HXGetMetalSheetEdit(&sheet.ID, nil),
									EditAdminOnly:   false,
									DeleteHref:      helpers.HXDeleteMetalSheet(sheet.ID),
									DeleteAdminOnly: true,
									User:            user,
								})
							</td>
						</tr>
					}
				}
			</tbody>
		</table>
	</figure>
}

// TODO: Split into multiple templates
templ MetalSheetTableBottom(user *models.User, metalSheets []*models.MetalSheet) {
	<figure class="w-full overflow-x-scroll">
		<table class="table borderless compact">
			<thead>
				<tr>
					<th>St채rke (mm)</th>
					<th>Blech (mm)</th>
					<th>Marke (mm)</th>
					<th>Stf.</th>
					<th>Hubende</th>
					<th>Typ</th>
					<th></th>
				</tr>
			</thead>
			<tbody>
				if len(metalSheets) == 0 {
					<tr>
						<td colspan="7" class="text-center">
							<i><small>Keine Bleche f체r dieses Werkzeug gefunden</small></i>
						</td>
					</tr>
				} else {
					for _, sheet := range metalSheets {
						<tr>
							<td>{ fmt.Sprintf("%.1f", sheet.TileHeight) }</td>
							<td>{ fmt.Sprintf("%.1f", sheet.Value) }</td>
							<td>{ fmt.Sprintf("%d", sheet.MarkeHeight) }</td>
							<td>{ fmt.Sprintf("%.1f", sheet.STF) }</td>
							<td>{ fmt.Sprintf("%.1f", sheet.STFMax) }</td>
							<td>
								<span class="badge small">{ sheet.Identifier.String() }</span>
							</td>
							<td class="button-group flex justify-end items-center">
								@components.TableActions(components.TableActionsOptions{
									EditHref:        helpers.HXGetMetalSheetEdit(&sheet.ID, nil),
									EditAdminOnly:   false,
									DeleteHref:      helpers.HXDeleteMetalSheet(sheet.ID),
									DeleteAdminOnly: true,
									User:            user,
								})
							</td>
						</tr>
					}
				}
			</tbody>
		</table>
	</figure>
}
