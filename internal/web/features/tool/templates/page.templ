package templates

import (
	"fmt"

	"github.com/knackwurstking/pgpress/internal/env"
	"github.com/knackwurstking/pgpress/internal/web/shared/components"
	"github.com/knackwurstking/pgpress/internal/web/shared/layouts"
	"github.com/knackwurstking/pgpress/pkg/models"
)

type PageProps struct {
	User *models.User

	ToolString string
	ToolID     int64
	Position   models.Position
}

templ Page(props *PageProps) {
	@layouts.Main(
		layouts.MainOptions{
			PageTitle: fmt.Sprintf("PG Presse | %s %s",
				props.ToolString, props.Position.GermanString()),
			AppBarTitle: fmt.Sprintf("%s %s",
				props.ToolString, props.Position.GermanString()),
			NavContent: navContent(),
		},
	) {
		<main class="container fluid flex flex-col gap">
			@sectionActions(props.User, props.ToolID)
			<section
				id="notes-section"
				hx-get={ fmt.Sprintf(
					"%s/htmx/tools/notes?tool_id=%d",
					env.ServerPathPrefix, props.ToolID,
				) }
				hx-trigger="load, pageLoaded from:body"
				hx-swap="innerHTML"
				hx-on:htmx:response-error="alert(event.detail.xhr.responseText)"
			>
				@components.Spinner()
			</section>
			if props.Position == models.PositionTop ||
				props.Position == models.PositionBottom {
				<section
					id="metal-sheets-section"
					hx-get={ fmt.Sprintf(
						"%s/htmx/tools/metal-sheets?tool_id=%d",
						env.ServerPathPrefix, props.ToolID,
					) }
					hx-trigger="load, pageLoaded from:body"
					hx-swap="innerHTML"
					hx-on:htmx:response-error="alert(event.detail.xhr.responseText)"
				>
					@components.Spinner()
				</section>
			}
			<section
				id="cycles-section"
				hx-get={ fmt.Sprintf(
					"%s/htmx/tools/cycles?tool_id=%d",
					env.ServerPathPrefix, props.ToolID,
				) }
				hx-trigger="load, pageLoaded from:body"
				hx-swap="innerHTML"
				hx-on:htmx:response-error="alert(event.detail.xhr.responseText)"
			>
				@components.Spinner()
			</section>
		</main>
	}
}

templ sectionActions(user *models.User, toolID int64) {
	<section class="action-bar flex gap justify-end items-center">
		<button
			class="primary flex gap"
			hx-get={ fmt.Sprintf("%s/htmx/tools/edit?id=%d&reload_page=true",
				env.ServerPathPrefix, toolID) }
			hx-trigger="click"
			hx-target="body"
			hx-swap="beforeend"
			hx-on:htmx:response-error="alert(event.detail.xhr.responseText)"
		>
			<i class="bi bi-pencil"></i>
			Bearbeiten
		</button>
		<button
			class="destructive flex gap"
			hx-patch={ fmt.Sprintf(
				"%s/htmx/tools/mark-dead?id=%d",
				env.ServerPathPrefix, toolID,
			) }
			hx-trigger="click"
			hx-confirm="Sind Sie sicher, dass Sie dieses Werkzeug löschen möchten?"
			hx-on:htmx:response-error="alert(event.detail.xhr.responseText)"
			class="destructive flex gap"
			if !user.IsAdmin() {
				disabled
			}
		>
			<i class="bi bi-trash"></i>
			Löschen
		</button>
	</section>
}

templ navContent() {
	@components.NavFeedButton()
	@components.NavProfileButton()
	@components.NavHomeButton()
}
