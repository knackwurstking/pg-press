package templates

import (
	"fmt"

	"github.com/knackwurstking/pgpress/internal/env"
	"github.com/knackwurstking/pgpress/internal/web/shared/components"

	"github.com/knackwurstking/pgpress/pkg/models"
)

templ ToolsList(tools []*models.ToolWithNotes) {
	for _, t := range tools {
		@toolListItem(t.ID, t)
	}
}

templ toolListItem(id int64, tool *models.ToolWithNotes) {
	<li
		id={ fmt.Sprintf("tool-%d", id) }
		data-format={ tool.Format.String() }
		data-code={ tool.Code }
		data-type={ tool.Type }
		data-position={ tool.Position.GermanString() }
	>
		<a
			role="button"
			href={ fmt.Sprintf(env.ServerPathPrefix+"/tools/tool/%d", id) }
			class="ghost contrast flex gap justify-between items-center"
		>
			<span class="flex gap-sm w-full">
				<span class="flex flex-col gap-sm">
					<span class="text-sm text-normal">
						{ tool.Format.String() } { tool.Code } { tool.Type }
					</span>
					<span class="flex flex-row gap items center">
						@components.PositionBadge(
							tool.Position, "muted text-bold")
						@components.ToolStatusBadge(tool.Tool)
						if tool.Binding != nil {
							<i class="bi bi-link-45deg text-info" title="Werkzeug ist gebunden"></i>
						}
					</span>
				</span>
				<span
					class="flex justify-end items-center w-full pr text-sm"
					hx-get={ fmt.Sprintf(
						"%s/htmx/tools/total-cycles?tool_id=%d&tool_position=%s&input=false",
						env.ServerPathPrefix, tool.ID, tool.Position,
					) }
					hx-trigger="load"
					hx-swap="innerHTML"
					hx-on:htmx:response-error="alert(event.detail.xhr.responseText)"
				></span>
			</span>
			<i class="bi bi-chevron-right"></i>
		</a>
	</li>
}
