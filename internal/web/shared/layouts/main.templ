package layouts

import (
	"github.com/knackwurstking/pgpress/internal/env"
	"github.com/knackwurstking/pgpress/internal/web/shared/helpers"
)

type MainOptions struct {
	PageTitle      string
	AppBarTitle    string
	AdditionalHead templ.Component
	NavContent     templ.Component
}

templ Main(options MainOptions) {
	<!DOCTYPE html>
	<html lang="de">
		<head>
			<meta charset="utf-8"/>
			<!-- Viewport and responsive design -->
			<meta
				name="viewport"
				content="width=device-width, initial-scale=1, user-scalable=yes, viewport-fit=cover"
			/>
			<!-- PWA and mobile optimization -->
			<meta name="mobile-web-app-capable" content="yes"/>
			<meta name="apple-mobile-web-app-capable" content="yes"/>
			<meta name="apple-mobile-web-app-status-bar-style" content="default"/>
			<meta name="apple-mobile-web-app-title" content="pgpress"/>
			<meta name="application-name" content="pgpress"/>
			<meta name="msapplication-TileColor" content="#3e3c49"/>
			<meta name="theme-color" content="#000000"/>
			<!-- Icons and manifest -->
			<link rel="icon" href={ helpers.AssetURL(env.ServerPathPrefix, "/favicon.ico") } sizes="any"/>
			<link rel="icon" href={ helpers.AssetURL(env.ServerPathPrefix, "/icon.png") } type="image/png"/>
			<link rel="apple-touch-icon" href={ helpers.AssetURL(env.ServerPathPrefix, "/apple-touch-icon-180x180.png") }/>
			<link rel="mask-icon" href={ helpers.AssetURL(env.ServerPathPrefix, "/icon.png") } color="#3e3c49"/>
			<!-- PWA Manifest -->
			<link
				rel="manifest"
				href={ helpers.AssetURL(env.ServerPathPrefix, "/manifest.json") }
			/>
			<!-- Stylesheets -->
			<link
				rel="stylesheet"
				href={ helpers.AssetURL(env.ServerPathPrefix, "/css/bootstrap-icons.min.css") }
			/>
			<link
				rel="stylesheet"
				href={ helpers.AssetURL(env.ServerPathPrefix, "/css/ui.min.css") }
			/>
			<link
				rel="stylesheet"
				href={ helpers.AssetURL(env.ServerPathPrefix, "/css/layout.css") }
			/>
			<title>{ options.PageTitle }</title>
			<!-- HTMX for dynamic content -->
			<script src={ helpers.AssetURL(env.ServerPathPrefix, "/js/htmx-v2.0.6.min.js") }></script>
			<script src={ helpers.AssetURL(env.ServerPathPrefix, "/js/htmx-ext-ws-v2.0.3.min.js") }></script>
			<script>
				const serverPathPrefix = "{{ env.ServerPathPrefix }}"; // Inject the constant
			</script>
			if options.AdditionalHead != nil {
				@options.AdditionalHead
			}
		</head>
		<body hx-ext="ws">
			<header class="container fluid">
				<nav class="flex gap justify-between">
					<div class="flex gap justify-start items-center">
						<div>
							<h5>{ options.AppBarTitle }</h5>
						</div>
					</div>
					if options.NavContent != nil {
						@options.NavContent
					}
				</nav>
			</header>
			{ children... }
			<template name="image-viewer">
				<dialog
					name="image-viewer"
					class="image-viewer fullscreen clean flex justify-center items-center"
				>
					<img alt="Attachment" class="attachment"/>
					<button
						type="button"
						class="close icon secondary ghost"
						onclick="this.closest('dialog').close()"
						title="SchlieÃŸen"
					>
						<i class="bi bi-x-lg"></i>
					</button>
				</dialog>
			</template>
		</body>
	</html>
}
