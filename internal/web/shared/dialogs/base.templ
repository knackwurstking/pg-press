package dialogs

import "fmt"

const (
	DialogContentID = "dialog-content"
)

type BaseProps struct {
	ID string

	Type             string // Type like "POST", "PUT"
	Href             string
	SubmitButtonText string

	Error string
	// TODO: Implement the Window Reload, this will auto skip the dispatch visibilitychange event
	JSOnClose    string
	SkipDispatch bool
}

templ Base(props BaseProps) {
	<dialog
		id={ props.ID }
		class="fullscreen clean flex flex-col justify-center items-center"
		if props.SkipDispatch {
			onclose={ templ.ComponentScript{
				Call: fmt.Sprintf(`this.remove(); %s; `, props.JSOnClose),
			} }
		} else {
			onclose={ templ.ComponentScript{
				Call: fmt.Sprintf(`
					window.dispatchEvent(new Event('visibilitychange'));
					this.remove();
					%s;
				`, props.JSOnClose),
			} }
		}
	>
		<form
			class="flex flex-col gap p"
			if props.Type == "POST" {
				hx-post={ props.Href }
			}
			if props.Type == "PUT" {
				hx-put={ props.Href }
			}
			hx-target="body"
			hx-swap="beforeend"
			hx-on:htmx:response-error="alert(event.detail.xhr.responseText)"
			hx-on:htmx:after-request="if (event.detail.successful) this.closest('dialog').close();"
			enctype="multipart/form-data"
		>
			if props.Error != "" {
				<div class="card compact destructive">
					<div class="card-body">
						{ props.Error }
					</div>
				</div>
			}
			// Content
			<div name="dialog-content" class="flex flex-col gap overflow-y-scroll scroll-smoth no-scrollbar p h-full">
				{ children... }
			</div>
			<footer class="flex gap justify-end">
				<button
					name="close"
					class="secondary flex gap"
					type="button"
					onclick="this.closest('dialog').close()"
				>
					<i class="bi bi-x-circle"></i>
					Schlie√üen
				</button>
				<button
					type="submit"
					class="flex gap"
				>
					<i class="bi bi-check-circle"></i>
					{ props.SubmitButtonText }
				</button>
			</footer>
		</form>
		<script defer>
                document.querySelector('#{{ props.ID }}').showModal();
            </script>
	</dialog>
}
