package tools

import (
	"fmt"

	"github.com/knackwurstking/pgpress/internal/env"
	"github.com/knackwurstking/pgpress/internal/web/shared/layouts"
	"github.com/knackwurstking/pgpress/pkg/models"
)

type PressPageProps struct {
	Press       models.PressNumber
	Cycles      []*models.Cycle
	User        *models.User
	ToolsMap    map[int64]*models.Tool
	MetalSheets []*models.MetalSheet
}

// TODO: Replace all "animate-spin" with my own spinner
templ PressPage(props PressPageProps) {
	@layouts.Main(
		layouts.MainOptions{
			PageTitle:   fmt.Sprintf("PG Presse | Werkzeuge Presse %d", props.Press),
			AppBarTitle: fmt.Sprintf("Werkzeug Presse %d", props.Press),
			NavContent:  navContent(),
		},
	) {
		<main class="container fluid">
			// Actions
			<section class="flex justify-end items-center gap">
				<a
					role="button"
					class="primary"
					href={ fmt.Sprintf("%s/tools/press/%d/umbau",
						env.ServerPathPrefix, props.Press) }
				>
					Umbau
				</a>
			</section>
			// Aktive tools table
			<section id="tool-state-section" class="mt">
				<div class="flex justify-between items-center mb">
					<h5>Aktive Werkzeuge</h5>
				</div>
				<div
					id="active-tools-content"
					hx-get={ fmt.Sprintf("%s/htmx/tools/press/active-tools?press=%d",
						env.ServerPathPrefix, props.Press) }
					hx-trigger="load, pageLoaded from:body"
					hx-indicator="#active-tools-loading"
					hx-on:htmx:before-request="document.getElementById('active-tools-loading').style.display = 'block'"
					hx-on:htmx:after-request="document.getElementById('active-tools-loading').style.display = 'none'"
					hx-on:htmx:response-error="alert('Fehler beim Laden der Werkzeuge: ' + event.detail.xhr.responseText)"
				>
					<div id="active-tools-loading" class="text-center p" style="display: none;">
						<i class="bi bi-arrow-clockwise animate-spin"></i> Lade Werkzeuge...
					</div>
				</div>
			</section>
			<br/>
			<section id="metal-sheets-section">
				<div class="flex justify-between items-center mb">
					<h5>Blech Listen</h5>
				</div>
				<div
					id="metal-sheets-content"
					hx-get={ fmt.Sprintf("%s/htmx/tools/press/metal-sheets?press=%d",
						env.ServerPathPrefix, props.Press) }
					hx-trigger="load, pageLoaded from:body"
					hx-indicator="#metal-sheets-loading"
					hx-on:htmx:before-request="document.getElementById('metal-sheets-loading').style.display = 'block'"
					hx-on:htmx:after-request="document.getElementById('metal-sheets-loading').style.display = 'none'"
					hx-on:htmx:response-error="alert('Fehler beim Laden der Blech Listen: ' + event.detail.xhr.responseText)"
				>
					<div id="metal-sheets-loading" class="text-center p" style="display: none;">
						<i class="bi bi-arrow-clockwise animate-spin"></i> Lade Blech Listen...
					</div>
				</div>
			</section>
			<br/>
			<!-- Press Cycles Table -->
			<section id="cycle-table-section" class="mt">
				<div class="flex justify-between items-center mb">
					<h5>Pressennutzungsverlauf</h5>
				</div>
				<div
					id="cycles-content"
					hx-get={ fmt.Sprintf("%s/htmx/tools/press/cycles?press=%d",
						env.ServerPathPrefix, props.Press) }
					hx-trigger="load, pageLoaded from:body"
					hx-indicator="#cycles-loading"
					hx-on:htmx:before-request="document.getElementById('cycles-loading').style.display = 'block'"
					hx-on:htmx:after-request="document.getElementById('cycles-loading').style.display = 'none'"
					hx-on:htmx:response-error="alert('Fehler beim Laden des Pressennutzungsverlaufs: ' + event.detail.xhr.responseText)"
				>
					<div id="cycles-loading" class="text-center p" style="display: none;">
						<i class="bi bi-arrow-clockwise animate-spin"></i> Lade Pressennutzungsverlauf...
					</div>
				</div>
			</section>
			<script>
				// Debounce function to prevent rapid reloads
				function debounce(func, wait) {
					let timeout;
					return function executedFunction(...args) {
						const later = function() {
							clearTimeout(timeout);
							func(...args);
						};
						clearTimeout(timeout);
						timeout = setTimeout(later, wait);
					};
				}

				// Debounced reload function
				const debouncedReload = debounce(function() {
					if (document.visibilityState === 'visible') {
						console.log('Page became visible - reloading HTMX sections');
						document.body.dispatchEvent(new CustomEvent('pageLoaded'));
					}
				}, 500);

				// Listen for visibility changes
				window.addEventListener("visibilitychange", debouncedReload);

				// Add manual refresh functionality
				window.refreshPressSections = function() {
					console.log('Manual refresh triggered');
					document.body.dispatchEvent(new CustomEvent('pageLoaded'));
				};

				// Show initial loading indicators on page load
				document.addEventListener('DOMContentLoaded', function() {
					document.getElementById('active-tools-loading').style.display = 'block';
					document.getElementById('metal-sheets-loading').style.display = 'block';
					document.getElementById('cycles-loading').style.display = 'block';
				});
			</script>
		</main>
	}
}
