package tools

import (
	"fmt"

	"github.com/knackwurstking/pgpress/internal/database/models"
	"github.com/knackwurstking/pgpress/internal/env"
	"github.com/knackwurstking/pgpress/internal/web/constants"
)

type CyclesSectionProps struct {
	User              *models.User
	SlotTop           int64
	SlotTopCassette   int64
	SlotBottom        int64
	TotalCycles       int64
	Cycles            []*models.PressCycle
	Regenerations     []*models.ToolRegeneration
}

templ CyclesSection(props *CyclesSectionProps) {
	<div class="card compact info text-sm mb">
		<div class="card-header">
			Entwicklernotiz
		</div>

		<div class="card-body">
			Die Presszyklen sind nach ihrer ID und nicht nach Datum sortiert.
			Eine niedrigere ID bedeutet einen älteren Eintrag (IDs sind einzigartig).
		</div>
	</div>

	<div class="flex justify-between items-center mb">
		<h5>Pressennutzungsverlauf</h5>
		<button
			class="secondary small flex"

			hx-get={ fmt.Sprintf(
				"%s/htmx/tools/cycle/edit?slot_top=%d&slot_top_cassette=%d&slot_bottom=%d",
				env.ServerPathPrefix, props.SlotTop, props.SlotTopCassette, props.SlotBottom,
			) }
			hx-trigger="click"
			hx-target={ fmt.Sprintf("#%s", constants.IDToolCycleEditDialog) }
			hx-swap="outerHTML"
			hx-on:htmx:response-error="alert(event.detail.xhr.responseText)"

			title="Neuen Eintrag hinzufügen"

			if !props.User.IsAdmin() {
				disabled
			}
		>
			<i class="bi bi-plus-lg"></i>
		</button>
	</div>

	<section>
		<h6 class="mb">
			Gesamtzyklen:
		</h6>
		<span>
			@TotalCycles(props.TotalCycles, true)
		</span>
	</section>

	<figure class="w-full overflow-x-scroll">
		<table name="tool-cycles-table" class="table borderless compact">
			<thead>
				<tr>
					<th name="id">ID</th>
					<th name="press">Presse</th>
					<th name="date">Datum</th>
					<th name="slots">Werkzeuge</th>
					<th name="total">Gesamtzyklen</th>
					<th name="partial">Teilzyklen (berechnet)</th>
					<th></th>
				</tr>
			</thead>

			<tbody>
				@cyclesTableRows(props.User, props.Cycles)
			</tbody>
		</table>
	</figure>

	// Dialog placeholder
	<span id={ constants.IDToolCycleEditDialog }></span>
}

templ cyclesTableRows(user *models.User, cycles []*models.PressCycle) {
	if len(cycles) == 0 {
		<tr>
			<td colspan="7" class="text-center">
				Kein Pressenverlauf verfügbar
			</td>
		</tr>
	} else {
		for _, cycle := range cycles {
			@renderCycleRowWithPartialCalc(user, cycle)
		}
	}
}

// renderCycleRowWithPartialCalc renders a cycle row with dynamically calculated partial cycles
// Partial cycles = total_cycles - previous_total_cycles
templ renderCycleRowWithPartialCalc(user *models.User, cycle *models.PressCycle) {
	<tr>
		<td>
			<span>{ cycle.ID }</span>
		</td>

		<td>
			<span>{ cycle.PressNumber }</span>
		</td>

		<td>
			<span class="text-sm">{ cycle.Date.Format("02.01.2006") }</span>
		</td>

		<td>
			<div class="flex flex-col gap-xs text-xs">
				if cycle.SlotTop > 0 {
					<div class="text-xs text-muted">
						O: { fmt.Sprintf("%d", cycle.SlotTop) }
					</div>
				}
				if cycle.SlotTopCassette > 0 {
					<div class="text-xs text-muted">
						K: { fmt.Sprintf("%d", cycle.SlotTopCassette) }
					</div>
				}
				if cycle.SlotBottom > 0 {
					<div class="text-xs text-muted">
						U: { fmt.Sprintf("%d", cycle.SlotBottom) }
					</div>
				}
			</div>
		</td>

		<td>
			{ cycle.TotalCycles }
		</td>

		<td>
			<span title="Berechnet: Gesamtzyklen - Gesamtzyklen des letzten Eintrags">
				{ cycle.PartialCycles }
			</span>
		</td>

		<td class="button-group flex justify-end items-center">
			// HTMX Button: Goto: Edit cycle entry dialog
			<button
				class="small ghost"

				hx-get={ fmt.Sprintf(
					"%s/htmx/tools/cycle/edit?slot_top=%d&slot_top_cassette=%d&slot_bottom=%d&cycle_id=%d",
					env.ServerPathPrefix, cycle.SlotTop, cycle.SlotTopCassette, cycle.SlotBottom, cycle.ID,
				) }
				hx-trigger="click"
				hx-target={ fmt.Sprintf("#%s", constants.IDToolCycleEditDialog) }
				hx-swap="outerHTML"
				hx-on:htmx:response-error="alert(event.detail.xhr.responseText)"

				title="Bearbeiten"

				if !user.IsAdmin() {
					disabled
				}
			>
				<i class="bi bi-pencil"></i>
			</button>

			// HTMX Button: Delete cycle from database table and reload section.cycles
			<button
				class="destructive small ghost"

				hx-delete={ fmt.Sprintf(
					"%s/htmx/tools/cycle/delete?cycle_id=%d&slot_top=%d&slot_top_cassette=%d&slot_bottom=%d",
					env.ServerPathPrefix, cycle.ID, cycle.SlotTop, cycle.SlotTopCassette, cycle.SlotBottom,
				) }
				hx-trigger="click"
				hx-target="section.cycles"
				hx-swap="innerHTML"
				hx-confirm={ fmt.Sprintf("Diesen Eintrag (%d Zyklen) löschen?", cycle.TotalCycles) }
				hx-on:htmx:response-error="alert(event.detail.xhr.responseText);"

				title="Löschen"

				if !user.IsAdmin() {
					disabled
				}
			>
				<i class="bi bi-trash"></i>
			</button>
		</td>
	</tr>
}
