package dialogs

const (
	DialogContentID = "dialog-content"
)

type BaseProps struct {
	ID string

	Type 				string // Type like "POST", "PUT"
	Href 				string
	Error 				string
	SubmitButtonText 	string
}

templ Base(props BaseProps) {
	<dialog
		id={ props.ID }
		class="fullscreen clean"
		onclose='
			console.debug("Dialog closed"); // TOOD: Remove this if this closing thing is working
			this.parentElement.removeChild(this);
		'
	>
		<form
			if props.Type == "POST" {
				hx-post={ props.Href }
			} else if props.Type == "PUT" {
				hx-put={ props.Href }
			}

			hx-target="body"
			hx-swap="beforeend"

			hx-on:htmx:response-error="alert(event.detail.xhr.responseText)"
			enctype="multipart/form-data"
		>
			if props.Error != "" {
				<div class="card compact destructive">
					<div class="card-body">
						{ props.Error }
					</div>
				</div>
			}

			// Content
			<div name="dialog-content" class="flex flex-col gap overflow-y-scroll scroll-smoth no-scrollbar p">
				{ children... }
			</div>

			<footer class="flex gap justify-end">
				<button
					name="close"
					class="secondary flex gap"
					type="button"
					onclick="this.closest('dialog').close()"
				>
					<i class="bi bi-x-circle"></i>
					Schlie√üen
				</button>

				<button
					type="submit"
					class="flex gap"
					onclick="this.closest('dialog').close()"
				>
					<i class="bi bi-check-circle"></i>
					{ props.SubmitButtonText }
				</button>
			</footer>
		</form>

		<script defer>
            document.querySelector('#{{ props.ID }}').showModal();
        </script>
	</dialog>
}
