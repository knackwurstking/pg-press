// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package feeds

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"fmt"

	feedmodels "github.com/knackwurstking/pgpress/internal/database/models/feed"
)

func RenderFeed(feed *feedmodels.Feed) templ.Component {
	var feedContent templ.Component
	data, _ := feed.Data.(map[string]any)

	switch feed.DataType {
	// User Types
	case feedmodels.TypeUserAdd:
		feedContent = AddUser(feedmodels.NewUserAdd(data))
	case feedmodels.TypeUserNameChange:
		feedContent = ChangeUserName(feedmodels.NewUserNameChange(data))
	case feedmodels.TypeUserRemove:
		feedContent = RemoveUser(feedmodels.NewUserRemove(data))
	// Trouble Report Types
	case feedmodels.TypeTroubleReportAdd:
		feedContent = AddTroubleReport(feedmodels.NewTroubleReportAdd(data))
	case feedmodels.TypeTroubleReportUpdate:
		feedContent = UpdateTroubleReport(feedmodels.NewTroubleReportUpdate(data))
	case feedmodels.TypeTroubleReportRemove:
		feedContent = RemoveTroubleReport(feedmodels.NewTroubleReportRemove(data))
	// Tool Types
	case feedmodels.TypeToolAdd:
		feedContent = AddTool(feedmodels.NewToolAdd(data))
	case feedmodels.TypeToolUpdate:
		feedContent = UpdateTool(feedmodels.NewToolUpdate(data))
	case feedmodels.TypeToolDelete:
		feedContent = DeleteTool(feedmodels.NewToolDelete(data))
	// Metal Sheet Types
	case feedmodels.TypeMetalSheetAdd:
		feedContent = AddMetalSheet(feedmodels.NewMetalSheetAdd(data))
	case feedmodels.TypeMetalSheetUpdate:
		feedContent = UpdateMetalSheet(feedmodels.NewMetalSheetUpdate(data))
	case feedmodels.TypeMetalSheetDelete:
		feedContent = DeleteMetalSheet(feedmodels.NewMetalSheetDelete(data))
	case feedmodels.TypeMetalSheetStatusChange:
		feedContent = MetalSheetStatusChange(feedmodels.NewMetalSheetStatusChange(data))
	case feedmodels.TypeMetalSheetToolAssignment:
		feedContent = MetalSheetToolAssignment(feedmodels.NewMetalSheetToolAssignment(data))
	// Press Cycle Types
	case feedmodels.TypePressCycleAdd:
		feedContent = AddPressCycle(feedmodels.NewPressCycleAdd(data))
	case feedmodels.TypePressCycleUpdate:
		feedContent = UpdatePressCycle(feedmodels.NewPressCycleUpdate(data))
	// Fallback
	default:
		feedContent = templ.Raw(fmt.Sprintf(`<pre>%#v</pre>`, feed.Data))
	}

	return Layout(feed.ID, feed.GetTime(), feedContent)
}

var _ = templruntime.GeneratedTemplate
