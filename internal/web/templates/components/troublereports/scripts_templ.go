// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package troublereports

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func shareTroubleReportPDF(event templ.JSExpression, troubleReportId int64, title string) templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_shareTroubleReportPDF_23e9`,
		Function: `function __templ_shareTroubleReportPDF_23e9(event, troubleReportId, title){var button = event.target.closest("button");
    if (!button) {
        alert("Fehler: Share-Button nicht gefunden.");
        return;
    }

    var originalContent = button.innerHTML;
    button.innerHTML = '<i class="bi bi-hourglass-split"></i>';
    button.disabled = true;

    function resetButton() {
        button.innerHTML = originalContent;
        button.style.color = "blue";
        button.disabled = false;
    }

    function showSuccess(icon) {
        button.innerHTML = icon;
        button.style.color = "green";
        setTimeout(resetButton, 1500);
    }

    function downloadPDF(blob) {
        var filename = ` + "`" + `fehlerbericht_${troubleReportId}_${new Date().toISOString().split("T")[0]}.pdf` + "`" + `;
        var url = URL.createObjectURL(blob);
        var a = document.createElement("a");
        a.href = url;
        a.download = filename;
        a.style.display = "none";
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        URL.revokeObjectURL(url);
        showSuccess('<i class="bi bi-download"></i>');
    }

    // FIXME: I need to use the serverPathPrefix variable to construct the URL
    fetch(` + "`" + `./trouble-reports/share-pdf?id=${troubleReportId}` + "`" + `)
        .then(response => {
            if (!response.ok) throw new Error(` + "`" + `HTTP error! status: ${response.status}` + "`" + `);
            return response.blob();
        })
        .then(blob => {
            var filename = ` + "`" + `fehlerbericht_${troubleReportId}_${new Date().toISOString().split("T")[0]}.pdf` + "`" + `;
            var isHTTPS = location.protocol === "https:";

            if (isHTTPS && navigator.share && navigator.canShare) {
                var file = new File([blob], filename, { type: "application/pdf" });
                var shareData = {
                    title: ` + "`" + `Fehlerbericht: ${title}` + "`" + `,
                    text: ` + "`" + `Fehlerbericht #${troubleReportId}` + "`" + `,
                    files: [file]
                };

                if (navigator.canShare(shareData)) {
                    return navigator.share(shareData)
                        .then(() => showSuccess('<i class="bi bi-check-circle"></i>'))
                        .catch(() => downloadPDF(blob));
                }
            }
            downloadPDF(blob);
        })
        .catch(error => {
            console.error("Error sharing/downloading PDF:", error);
            alert("Fehler beim Erstellen oder Teilen der PDF. Bitte versuchen Sie es erneut.");
            resetButton();
        });
}`,
		Call:       templ.SafeScript(`__templ_shareTroubleReportPDF_23e9`, event, troubleReportId, title),
		CallInline: templ.SafeScriptInline(`__templ_shareTroubleReportPDF_23e9`, event, troubleReportId, title),
	}
}

var _ = templruntime.GeneratedTemplate
