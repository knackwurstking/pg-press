package toolpage

import (
	"github.com/knackwurstking/pgpress/internal/database/models"
	"github.com/knackwurstking/pgpress/internal/database/services/tool"
	"github.com/knackwurstking/pgpress/internal/env"
	"github.com/knackwurstking/pgpress/internal/web/constants"
	"github.com/knackwurstking/pgpress/internal/web/templates/components"
	tooltemplates "github.com/knackwurstking/pgpress/internal/web/templates/components/tools"
	"github.com/knackwurstking/pgpress/internal/web/templates/layouts"
)

templ Page(tools []*tool.ToolWithNotes) {
	@layouts.Main(
		layouts.MainOptions{
			PageTitle:   "PG Presse | Werkzeuge",
			AppBarTitle: "Werkzeuge",
			NavContent:  navContent(),
		},
	) {
		<main class="container fluid">
			<div class="tools" style="display: flex; flex-direction: column; gap: 1.5rem;">
				@sectionPress()
				@sectionTools(tools)
			</div>
		</main>
	}
}

templ navContent() {
	<div class="flex flex-row gap justify-end items-center">
		@components.NavFeedButton()
		@components.NavProfileButton()
		@components.NavHomeButton()
	</div>
}

templ sectionPress() {
	<details class="active-tools">
		<summary class="mb">
			<h4>
				<i class="bi bi-gear-fill mr"></i>
				Eingebaute Werkzeuge
			</h4>
		</summary>
		<div class="card warning">
			<div class="card-header">
				<div>
					<i class="bi bi-exclamation-triangle mr"></i>
					<span>In Bearbeitung</span>
				</div>
			</div>
		</div>
		<ul
			class="flex flex-col gap m-0 p-0"
			style="list-style: none;"
		>
			@sectionPressListItem(
				"Presse 0",
				"",
				"",
				"",
				env.ServerPathPrefix+"/tools/press/0",
			)
			@sectionPressListItem(
				"Presse 2",
				"",
				"",
				"",
				env.ServerPathPrefix+"/tools/press/2",
			)
			@sectionPressListItem(
				"Presse 3",
				"",
				"",
				"",
				env.ServerPathPrefix+"/tools/press/3",
			)
			@sectionPressListItem(
				"Presse 4",
				"",
				"",
				"",
				env.ServerPathPrefix+"/tools/press/4",
			)
			@sectionPressListItem(
				"Presse 5",
				"",
				"",
				"",
				env.ServerPathPrefix+"/tools/press/5",
			)
		</ul>
	</details>
}

templ sectionPressListItem(title, top, topCassette, bottom, href string) {
	<li title={ title }>
		<a
			role="button"
			href={ href }
			class="ghost contrast flex justify-between items-center"
		>
			<span class="flex flex-col gap-lg w-full">
				<h5>{ title }</h5>
				<span class="flex flex-wrap gap-lg justify-evenly items-center w-full">
					<!-- Lower Tool -->
					<span class="flex flex-col justify-center items-center">
						@tooltemplates.PositionBadge(models.PositionBottom, "muted")
						<span class="text-sm">{ bottom }</span>
					</span>
					<!-- Separator -->
					<span class="muted ghost">|</span>
					<!-- Upper Tool -->
					<span class="flex flex-col gap-sm">
						<span class="flex flex-col gap-0 justify-center items-center">
							@tooltemplates.PositionBadge(models.PositionTop, "muted")
							<span class="text-sm">{ top }</span>
						</span>
						if topCassette != "" {
							<span class="flex flex-col gap-0 justify-center items-center">
								@tooltemplates.PositionBadge(models.PositionTopCassette, "muted")
								<span class="text-sm">{ topCassette }</span>
							</span>
						}
					</span>
				</span>
			</span>
			<i class="bi bi-chevron-right"></i>
		</a>
	</li>
}

templ sectionTools(tools []*tool.ToolWithNotes) {
	<div class="all-tools p">
		<h4 class="mb p">
			<i class="bi bi-archive mr"></i>
			Alle Werkzeuge
		</h4>
		<div class="actions-bar flex gap justify-end items-center">
			<button
				type="button"
				class="primary flex gap"
				hx-get={ env.ServerPathPrefix + "/htmx/tools/edit" }
				hx-trigger="click"
				hx-target="body"
				hx-swap="beforeend"
			>
				<i class="bi bi-plus-lg"></i>
				<span>Erstellen</span>
			</button>
		</div>
		<ul
			id={ constants.IDAllToolsList }
			hx-get={ env.ServerPathPrefix + "/htmx/tools/list" }
			hx-trigger="load,pageLoaded"
			hx-swap="innerHTML"
			class="flex flex-col gap m-t p-0"
			style="list-style: none;"
		></ul>
		<script>
			window.addEventListener("visibilitychange", function() {
    			if (document.visibilityState === 'visible') {
                    console.debug("Reload #allToolsList because of a visibility change")
    				htmx.trigger("#allToolsList", 'pageLoaded');
    			}
    		});
		</script>
	</div>
}
