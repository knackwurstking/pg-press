package troublereportspage

import (
	"context"
	"fmt"
	"io"
	"github.com/knackwurstking/pgpress/pkg/models"
	"github.com/knackwurstking/pgpress/pkg/modification"
)

// Breadcrumb navigation for trouble report modifications
templ ModificationsBreadcrumb(reportID int64) {
	<nav class="flex mb" aria-label="Breadcrumb">
		<ol class="inline-flex items-center gap">
			<li class="inline-flex items-center">
				<a href="/trouble-reports" class="inline-flex items-center text-sm nav-link">
					<svg width="16" height="16" style="margin-right: var(--ui-spacing);" fill="currentColor" viewBox="0 0 20 20">
						<path d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"></path>
					</svg>
					Trouble Reports
				</a>
			</li>
			<li>
				<div class="flex items-center">
					<svg width="24" height="24" class="muted" fill="currentColor" viewBox="0 0 20 20">
						<path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
					</svg>
					<span style="margin-left: var(--ui-spacing);" class="text-sm muted">Report #{ fmt.Sprintf("%d", reportID) }</span>
				</div>
			</li>
			<li aria-current="page">
				<div class="flex items-center">
					<svg width="24" height="24" class="muted" fill="currentColor" viewBox="0 0 20 20">
						<path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
					</svg>
					<span style="margin-left: var(--ui-spacing);" class="text-sm muted">Modifications</span>
				</div>
			</li>
		</ol>
	</nav>
}

// Individual modification entry with rollback functionality
templ ModificationEntry(mod *modification.Mod[models.TroubleReportModData], reportID int64, canRollback bool) {
	<div class="card primary p mb" style="border-left: 4px solid var(--ui-primary);">
		<div class="flex justify-between items-center mb">
			<div class="flex items-center gap-sm">
				<span class="text-semibold">Modified by { mod.GetUserName() }</span>
				<span class="badge info text-xs">v{ fmt.Sprintf("%d", mod.Time) }</span>
			</div>
			<div class="flex items-center gap">
				<span class="text-sm muted">{ mod.GetTimeString() }</span>
				if canRollback {
					@RollbackButton(reportID, mod.Time)
				}
			</div>
		</div>
		<div class="card muted p">
			<div class="flex flex-col gap">
				<div>
					<label class="block text-semibold mb-sm">Title:</label>
					<div class="card p-sm">{ mod.Data.Title }</div>
				</div>
				<div>
					<label class="block text-semibold mb-sm">Content:</label>
					<div class="card p-sm whitespace-pre-wrap max-h-40 overflow-y-auto">{ mod.Data.Content }</div>
				</div>
				<div>
					<label class="block text-semibold mb-sm">Attachments:</label>
					<div class="flex items-center">
						<span>{ fmt.Sprintf("%d", len(mod.Data.LinkedAttachments)) } attachment(s)</span>
						<svg width="16" height="16" style="margin-left: var(--ui-spacing);" class="muted" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.172 7l-6.586 6.586a2 2 0 102.828 2.828l6.414-6.586a4 4 0 00-5.656-5.656l-6.415 6.585a6 6 0 108.486 8.486L20.5 13"></path>
						</svg>
					</div>
				</div>
			</div>
		</div>
	</div>
}

// Rollback button component
templ RollbackButton(reportID int64, modificationTime int64) {
	<form hx-post={ fmt.Sprintf("/htmx/trouble-reports/rollback?id=%d", reportID) }
		  hx-target="#rollback-messages"
		  hx-swap="innerHTML"
		  class="inline">
		<input type="hidden" name="modification_time" value={ fmt.Sprintf("%d", modificationTime) }/>
		<button type="submit"
				class="primary small"
				onclick="return confirm('Are you sure you want to rollback to this version? This will overwrite the current trouble report.')">
			Rollback
		</button>
	</form>
}

// Complete modifications page with breadcrumbs and rollback messages
templ ModificationsPageContent(reportID int64, mods modification.Mods[models.TroubleReportModData], canRollback bool) {
	@ModificationsBreadcrumb(reportID)
	<div id="rollback-messages"></div>
	
	for _, mod := range mods {
		@ModificationEntry(mod, reportID, canRollback)
	}
}

// Render function factory that returns a templ.Component for use with modificationspage.Page
func CreateModificationRenderer(reportID int64, canRollback bool) func(*modification.Mod[models.TroubleReportModData]) templ.Component {
	renderBreadcrumbs := true
	return func(mod *modification.Mod[models.TroubleReportModData]) templ.Component {
		return templ.ComponentFunc(func(ctx context.Context, w io.Writer) error {
			// Render breadcrumbs and rollback messages container only once
			if renderBreadcrumbs {
				breadcrumb := ModificationsBreadcrumb(reportID)
				if err := breadcrumb.Render(ctx, w); err != nil {
					return err
				}
				
				if _, err := w.Write([]byte(`<div id="rollback-messages"></div>`)); err != nil {
					return err
				}
				
				renderBreadcrumbs = false
			}
			
			// Render the modification entry
			entry := ModificationEntry(mod, reportID, canRollback)
			return entry.Render(ctx, w)
		})
	}
}