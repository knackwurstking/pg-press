package pages

import (
	"fmt"
	"github.com/knackwurstking/pgpress/internal/database"
	"github.com/knackwurstking/pgpress/internal/templates/layouts"
)

templ toolsPageNavContent(relPath string) {
	<div class="flex flex-row gap justify-end items-center">
		@navFeedButton(relPath)
		@navProfileButton(relPath)
		@navHomeButton(relPath)
	</div>
}

templ ToolsPage(tools []*database.ToolWithNotes) {
	@layouts.Main(
		layouts.MainOptions{
			RelPath:     "./",
			PageTitle:   "PG Presse | Werkzeuge",
			AppBarTitle: "Werkzeuge",
			NavContent:  toolsPageNavContent("./"),
		},
	) {
		<main class="container fluid">
			<!-- NOTE: Just some things i have in mind

				action buttons
					add a new tool
					add/edit a new metal sheet entry
					 	edit dialog, or a sub page
						while typing, do background checks for existing data and display below

			 	list tools
					if a tool was clicked
				     	action buttons
						    share to pdf button, only enabled if a tool is selected

						selection
							<select: Upper Tool ID> <select: Lower Tool ID>
							100x100 G01 	 		100x100 G02

						output
							Showing notes for upper and lower tools

							Metal sheets table
								Thickness in mm, with a belonging mass humidity (Optimal: 6%)
								Marke height in mm
								Stempelfall ("current", "max"), (types: "SACMI", "SITI")

							Calculator based on existing table data (Experimental)

			-->
			<div class="card warning">
				<div class="card-header">
					<h4>
						<i class="bi bi-exclamation-triangle mr"></i>
						<span>Work in Progress</span>
					</h4>
				</div>
				<div class="card-body">
					Just developing an idea here
				</div>
			</div>
			<!--div class="actions"></div-->
			<div class="tools" style="display: flex; flex-direction: column; gap: 1.5rem;">
				@activeTools()
				@allTools(tools)
			</div>
		</main>
	}
}

// TODO: Take database data from the database for this press (prop: press *database.Press)
templ ToolsActivePage(press int64) {
	@layouts.Main(
		layouts.MainOptions{
			RelPath:     "../../",
			PageTitle:   fmt.Sprintf("PG Presse | Werkzeuge Presse %d", press),
			AppBarTitle: fmt.Sprintf("Werkzeug Presse %d", press),
			NavContent:  toolsPageNavContent("../../"),
		},
	) {
		<main class="container fluid">
			<div class="card warning">
				<div class="card-header">
					<h4>
						<i class="bi bi-exclamation-triangle mr"></i>
						<span>Work in Progress</span>
					</h4>
				</div>
				<div class="card-body">
					<ul>
						<!-- TODO: ... -->
						<li>Display the metal sheets table for the lower and upper tool.</li>
						<li>Show notes with levels (INFO, WARNING, ERROR) or something like this.</li>
						<li>Show Zyklen made with these tools, allow editing, reset after regeneration but keep the data.</li>
					</ul>
				</div>
			</div>
		</main>
	}
}

templ ToolPage(tool *database.ToolWithNotes) {
	@layouts.Main(
		layouts.MainOptions{
			RelPath:     "../../",
			PageTitle:   fmt.Sprintf("PG Presse | %s", tool.String()),
			AppBarTitle: tool.String(),
			NavContent:  toolsPageNavContent("../../"),
		},
	) {
		<main class="container fluid">
			<div class="card warning">
				<div class="card-header">
					<h4>
						<i class="bi bi-exclamation-triangle mr"></i>
						<span>Work in Progress</span>
					</h4>
				</div>
				<div class="card-body">
					<ul>
						<li>...</li>
					</ul>
				</div>
			</div>
			<!-- TODO: Print out notes and all available data in `tool` -->
			<!-- TODO: Request metalsheets for this tool id (htmx) -->
		</main>
	}
}

templ activeTools() {
	<div class="active-tools p">
		<h3 class="mb">
			<i class="bi bi-gear-fill mr"></i>
			Eingebaute Werkzeuge
		</h3>
		<ul
			class="flex flex-col gap m-0 p-0"
			style="list-style: none;"
		>
			@activeTool("Presse 0", "100x100 G01", "100x100 G01", "./tools/active/0")
		</ul>
	</div>
}

templ activeTool(title, upper, lower, href string) {
	<li title={ title }>
		<a
			role="button"
			href={ href }
			class="ghost contrast flex justify-between items-center"
		>
			<span class="flex flex-col">
				<h5>{ title }</h5>
				<span class="flex flex-wrap gap items-center">
					<!-- Lower Tool -->
					<span>
						<small
							style="border-radius: var(--ui-radius);"
							class="primary px-sm"
						>Unten</small>
						<small><strong>{ lower }</strong></small>
					</span>
					<!-- Separator -->
					<span class="muted ghost">|</span>
					<!-- Upper Tool -->
					<span>
						<small
							style="border-radius: var(--ui-radius);"
							class="primary px-sm"
						>Oben</small>
						<small><strong>{ upper }</strong></small>
					</span>
				</span>
			</span>
			<i class="bi bi-chevron-right"></i>
		</a>
	</li>
}

templ allTools(tools []*database.ToolWithNotes) {
	<div class="all-tools p">
		<h3 class="mb">
			<i class="bi bi-archive mr"></i>
			Alle Werkzeuge
		</h3>
		<ul
			class="flex flex-col gap m-0 p-0"
			style="list-style: none;"
		>
			<!-- Tools ordered from biggest to smallest -->
			<!-- TODO: For these items here i need an icon which marks a tool is gone
			for regeneration, another icon for broken and an icon for attention -->
			<!-- TODO: List all tools here -->
			<li>
				@tool("150x75 XXL01", "./tools/all/0")
			</li>
			<li>
				@tool("100x100 G01", "./tools/all/1")
			</li>
			<li>
				@tool("100x100 G02", "./tools/all/2")
			</li>
		</ul>
	</div>
}

templ tool(title, href string) {
	<li>
		<a
			role="button"
			href={ href }
			class="ghost contrast flex justify-between items-center py px-lg"
		>
			<span>{ title }</span>
			<i class="bi bi-chevron-right"></i>
		</a>
	</li>
}
