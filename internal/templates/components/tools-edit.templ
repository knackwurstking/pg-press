package components

import "fmt"

type ToolEditDialogProps struct {
	ID              int64
	Close           bool
	InvalidPosition bool
	InvalidFormat   bool
	InvalidType     bool
	InvalidCode     bool
}

templ ToolEditDialog(props *ToolEditDialogProps) {
	if props.Close {
		<span id="toolEditDialog"></span>
	} else {
		<dialog name="tool-edit-dialog" class="fullscreen clean flex flex-col justify-center items-center">
			<form
				class="flex flex-col gap max-w-full"
				if props.ID > 0 {
					hx-put={ fmt.Sprintf(
						"%s/htmx/tools/edit?id=%d",
						serverPathPrefix, props.ID,
					) }
				} else {
					hx-post={ serverPathPrefix + "/htmx/tools/edit" }
				}
				hx-trigger="submit"
				hx-target="#toolEditDialog"
				hx-swap="outerHTML"
				enctype="multipart/form-data"
			>
				<div class="form-content flex flex-col gap overflow-y-scroll scroll-smoth no-scrollbar p">
					<div class="flex flex-col gap-sm">
						<label for="position">Position</label>
						<select
							id="position"
							name="position"
							required
							if props.InvalidPosition {
								aria-invalid="true"
							}
						>
							<option value="">Position auswählen</option>
							<option value="top">Oberteil</option>
							<option value="bottom">Untenterteil</option>
						</select>
					</div>
					<div class="flex flex-col gap-sm">
						<label>Format</label>
						<div class="flex gap-sm">
							<input
								type="number"
								id="width"
								name="width"
								class="w-full"
								placeholder="z.B. 120"
								required
								if props.InvalidFormat {
									aria-invalid="true"
								}
							/>
							<span style="margin: auto 0;" class="text-xl">x</span>
							<input
								type="number"
								id="height"
								name="height"
								class="w-full"
								placeholder="z.B. 60"
								required
								if props.InvalidFormat {
									aria-invalid="true"
								}
							/>
						</div>
					</div>
					<div class="flex flex-col gap-sm">
						<label for="type">Typ</label>
						<input
							type="text"
							id="type"
							name="type"
							placeholder="z.B. MASS, FC, GTC"
							required
							if props.InvalidType {
								aria-invalid="true"
							}
						/>
					</div>
					<div class="flex flex-col gap-sm">
						<label for="code">Code</label>
						<input
							type="text"
							id="code"
							name="code"
							placeholder="z.B. G01, G02, XXL01"
							required
							if props.InvalidCode {
								aria-invalid="true"
							}
						/>
					</div>
				</div>
				<footer class="flex gap justify-end">
					<button
						type="button"
						class="secondary flex gap"
						onclick="closeToolEditDialog()"
						hx-get={ serverPathPrefix + "/htmx/tools/edit?close=true" }
						hx-trigger="click"
						hx-target="#toolEditDialog"
						hx-swap="outerHTML"
					>
						<i class="bi bi-x-circle"></i>
						Schließen
					</button>
					<button type="submit" class="flex gap">
						<i class="bi bi-check-circle"></i>
						if props.ID > 0 {
							Aktualisieren
						} else {
							Erstellen
						}
					</button>
				</footer>
			</form>
			<script>
    			function closeToolEditDialog() {
    				var dialog = document.querySelector(`dialog[name="tool-edit-dialog"]`);
    				dialog.close();
    				dialog.parentElement.removeChild(dialog);
    			}

    			document.querySelector(`dialog[name="tool-edit-dialog"]`).showModal();
    		</script>
		</dialog>
	}
}
