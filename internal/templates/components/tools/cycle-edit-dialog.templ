package tools

import (
	"fmt"
	"github.com/knackwurstking/pgpress/internal/constants"
	"github.com/knackwurstking/pgpress/internal/database"
)

type CycleEditDialogProps struct {
	Tool    *database.Tool
	CycleID int64
	Close   bool
}

templ CycleEditDialog(props *CycleEditDialogProps) {
	if props.Close {
		<span
			hx-get={ fmt.Sprintf(
				"%s/htmx/tools/cycles?tool_id=%d",
				constants.ServerPathPrefix, props.Tool.ID,
			) }
			hx-trigger="load"
			hx-target="section.cycles"
			hx-swap="innerHTML"
			id={ constants.IDToolCycleEditDialog }
		></span>
	} else {
		<dialog class="fullscreen clean" id={ constants.IDToolCycleEditDialog }>
			<form
				class="container"
				if props.CycleID > 0 {
					hx-put={ fmt.Sprintf("%s/...", constants.ServerPathPrefix) }
				} else {
					hx-post={ fmt.Sprintf("%s/...", constants.ServerPathPrefix) }
				}
				hx-trigger="submit"
				hx-target={ fmt.Sprintf("#%s", constants.IDToolCycleEditDialog) }
				hx-swap="outerHTML"
				enctype="multipart/form-data"
			>
				{{ active := false }}
				<div class="form-content flex flex-col gap overflow-y-scroll scroll-smoth no-scrollbar p">
					switch props.Tool.Status {
						case database.ToolStatusActive:
							{{ active = true }}
							<section class="flex flex-col gap-sm">
								<label>Gesamtzyklen</label>
								<input type="number" min="0" step="1" id="total_cycles" name="total_cycles" placeholder="Gesamtzyklen" required/>
							</section>
						default:
							<div class="card destructive">
								<span class="card-body">
									<i class="bi bi-exclamation-triangle"></i>
									<span>Werkzeug ist nicht aktiv</span>
								</span>
							</div>
					}
				</div>
				<footer class="flex gap justify-end">
					<button
						type="button"
						class="secondary flex gap"
						hx-get={ fmt.Sprintf(
							"%s/htmx/tools/cycle/edit?close=true&tool_id=%d",
							constants.ServerPathPrefix, props.Tool.ID,
						) }
						hx-trigger="click"
						hx-target={ fmt.Sprintf("#%s", constants.IDToolCycleEditDialog) }
						hx-swap="outerHTML"
					>
						<i class="bi bi-x-circle"></i>
						Schlie√üen
					</button>
					<button
						type="submit"
						class="flex gap"
						if !active {
							disabled
						}
					>
						<i class="bi bi-check-circle"></i>
						if props.CycleID > 0 {
							Aktualisieren
						} else {
							Erstellen
						}
					</button>
				</footer>
			</form>
			<script defer>
                document.querySelector("#toolCycleEditDialog").showModal();
            </script>
		</dialog>
	}
}
