package tools

import (
	"fmt"
	"github.com/knackwurstking/pgpress/internal/constants"
	"github.com/knackwurstking/pgpress/internal/database"
)

type EditDialogProps struct {
	ID                   int64
	Close                bool
	InputPosition        string
	InputWidth           int
	InputHeight          int
	InputType            string
	InputCode            string
	ReloadToolsList      bool
	SelectPressSelection *database.PressNumber
}

// TODO: Adding press selection `InputPressSelection` (Optional)
templ EditDialog(props *EditDialogProps) {
	if props.Close {
		<span
			id={ constants.IDToolEditDialog }
			if props.ReloadToolsList {
				hx-get={ constants.ServerPathPrefix + "/htmx/tools/list" }
				hx-trigger="load"
				hx-target={ fmt.Sprintf("#%s", constants.IDAllToolsList) }
				hx-swap="outerHTML"
			}
		></span>
	} else {
		<dialog
			name="tool-edit-dialog"
			id={ constants.IDToolEditDialog }
			class="fullscreen clean flex flex-col justify-center items-center"
		>
			<form
				class="flex flex-col gap max-w-full"
				if props.ID > 0 {
					hx-put={ fmt.Sprintf(
						"%s/htmx/tools/edit?id=%d",
						constants.ServerPathPrefix, props.ID,
					) }
				} else {
					hx-post={ constants.ServerPathPrefix + "/htmx/tools/edit" }
				}
				hx-trigger="submit"
				hx-target={ fmt.Sprintf("#%s", constants.IDToolEditDialog) }
				hx-swap="outerHTML"
				enctype="multipart/form-data"
			>
				<div class="form-content flex flex-col gap overflow-y-scroll scroll-smoth no-scrollbar p">
					<div class="flex flex-col gap-sm">
						<label for="position">Position</label>
						<select
							id={ constants.IDPosition }
							name="position"
							required
						>
							<option
								value=""
								if props.InputPosition == "" {
									selected
								}
							>Position auswählen</option>
							<option
								value="top"
								if props.InputPosition == "top" {
									selected
								}
							>Oberteil</option>
							<option
								value="bottom"
								if props.InputPosition == "bottom" {
									selected
								}
							>Unterteil</option>
							<option
								value="top"
								if props.InputPosition == "top" {
									selected
								}
							>Cassette Oberteil</option>
						</select>
					</div>
					<div class="flex flex-col gap-sm">
						<label>Format</label>
						<div class="flex gap-sm">
							<input
								type="number"
								id={ constants.IDWidth }
								name="width"
								class="w-full"
								placeholder="z.B. 120"
								if props.InputWidth != 0 {
									value={ props.InputWidth }
								}
								required
							/>
							<span style="margin: auto 0;" class="text-xl">x</span>
							<input
								type="number"
								id={ constants.IDHeight }
								name="height"
								class="w-full"
								placeholder="z.B. 60"
								if props.InputHeight != 0 {
									value={ props.InputHeight }
								}
								required
							/>
						</div>
					</div>
					<div class="flex flex-col gap-sm">
						<label for="type">Typ</label>
						<input
							type="text"
							id={ constants.IDType }
							name="type"
							placeholder="z.B. MASS, FC, GTC"
							value={ props.InputType }
							required
						/>
					</div>
					<div class="flex flex-col gap-sm">
						<label for="code">Code</label>
						<input
							type="text"
							id={ constants.IDCode }
							name="code"
							placeholder="z.B. G01, G02, XXL01, 3573"
							value={ props.InputCode }
							required
						/>
					</div>
				</div>
				<footer class="flex gap justify-end p">
					<button
						type="button"
						class="secondary flex gap"
						hx-get={ fmt.Sprintf(
							"%s/htmx/tools/edit?id=%d&close=true",
							constants.ServerPathPrefix, props.ID,
						) }
						hx-trigger="click"
						hx-target={ fmt.Sprintf("#%s", constants.IDToolEditDialog) }
						hx-swap="outerHTML"
					>
						<i class="bi bi-x-circle"></i>
						Schließen
					</button>
					<button type="submit" class="flex gap">
						<i class="bi bi-check-circle"></i>
						if props.ID > 0 {
							Aktualisieren
						} else {
							Erstellen
						}
					</button>
				</footer>
			</form>
			<script>
    			document.querySelector(`dialog[name="tool-edit-dialog"]`).showModal();
    		</script>
		</dialog>
	}
}
